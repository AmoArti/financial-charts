/* src/pages/Home.css (Mit Wrapper für Sticky Chart Controls - Vollständig) */

/* Container für Chart-Vorschauen (ggf. anpassen/entfernen, falls nicht mehr genutzt) */
.chart-container {
  width: 400px;
  height: 300px;
  margin: 0 auto;
  cursor: pointer;
}

.chart-container:hover {
  border: 2px solid var(--ion-color-primary, #3880ff); /* Nutze Theme-Variable */
  border-radius: 8px;
}

/* Styling für das benutzerdefinierte Modal (falls noch relevant) */
.custom-modal {
  --background: var(--ion-background-color, #fff); /* Nutze Theme-Variable */
  --border-radius: 10px;
  --box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
  --width: 90%;
  --height: 80%;
  --max-width: 900px;
  --max-height: 600px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.modal-header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 20px;
  padding: 10px 20px;
  width: 100%;
  border-bottom: 1px solid var(--ion-color-step-150, #e0e0e0);
}

.toggle-wrapper {
   position: absolute;
   left: 50%;
   transform: translateX(-50%);
   display: flex;
   justify-content: center;
}

.toggle-container {
  display: flex;
  align-items: center;
  gap: 10px;
}

.toggle-container ion-label {
  font-size: 16px;
  color: var(--ion-color-step-600, #666);
}

.modal-chart-container {
  width: 100%;
  flex-grow: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0 20px 20px 20px;
  overflow: hidden;
}

.close-button {
  color: var(--ion-text-color, #000);
  z-index: 10;
}

.close-button ion-icon {
  font-size: 24px;
}

/* Styling für die Infobox (Titel zentriert, Inhalt links mit max-width) */
.company-info-card {
  box-shadow: none;
  border: none;
  text-align: center; /* Titel und Content-Block werden zentriert */
  margin: 20px 0;
}

.company-info-card ion-card-header {
  background-color: transparent;
  padding-bottom: 0;
}

.company-info-card ion-card-title {
  font-size: 1.2rem;
  color: var(--ion-color-step-850, #333);
  /* Zentrierung wird von .company-info-card geerbt */
}

.company-info-card ion-card-content {
  padding-top: 5px;
  max-width: 500px; /* Beispielwert */
  margin-left: auto;
  margin-right: auto;
  text-align: start; /* Inhalt der Items ist linksbündig */
}

.company-info-card ion-card-content ion-item {
   --background: transparent;
   --inner-padding-end: 0px;
   --padding-start: 0px;
}


/* Styling für die Fehlermeldung */
.error-card {
  margin: 20px 0;
  border: 1px solid var(--ion-color-danger, #ff4d4f);
}

.error-card ion-card-header {
  background-color: rgba(var(--ion-color-danger-rgb, 255, 77, 79), 0.1);
  padding-bottom: 0;
}

.error-card ion-card-title {
  color: var(--ion-color-danger, #ff4d4f);
  padding-top: 5px;
}

.error-card ion-card-content {
  padding-top: 5px;
}

.error-card ion-button {
  margin-top: 10px;
}

/* Globales Styling für den Fortschrittsbalken */
ion-progress-bar {
  --background: var(--ion-color-step-150, #e0e0e0);
  --progress-background: var(--ion-color-secondary, #4bc0c0);
  height: 10px;
  border-radius: 5px;
}

/* Styling für die Ladeanimation (Container) */
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
}

/* Styling für das Dropdown-Menü im Modal-Header (falls noch relevant) */
.chart-header {
  display: flex;
  justify-content: flex-start;
  padding-bottom: 10px;
}

.chart-header ion-select {
  font-size: 0.9rem;
  padding: 5px 10px;
  border: 1px solid var(--ion-color-step-200, #ccc);
  border-radius: 5px;
  background-color: var(--ion-color-step-50, #f9f9f9);
}

/* Styles für LoadingIndicator component wrapper */
.loading-indicator-wrapper {
  text-align: center;
  margin: 20px 0;
}

.loading-indicator-wrapper ion-progress-bar {
  margin-top: 10px;
}

/* === ENTFERNT: Styling für die alte sticky Toolbar === */
/*
ion-toolbar.sticky-controls-toolbar { ... }
.sticky-controls-toolbar ion-segment-button { ... }
.sticky-controls-toolbar ion-segment-button ion-label { ... }
.sticky-controls-toolbar ion-select { ... }
*/

/* === NEU: Styling für den Wrapper der ChartControls, um Sticky-Verhalten zu ermöglichen === */
.chart-controls-sticky-wrapper {
  position: -webkit-sticky; /* Für Safari-Kompatibilität */
  position: sticky;
  top: 0; /* Haftet am oberen Rand des scrollbaren IonContent-Bereichs */
  z-index: 100; /* Muss über den Charts liegen */
  background: var(--ion-background-color, #fff); /* Hintergrund, damit Inhalt nicht durchscheint */
  /* Padding, damit die Controls nicht direkt am Rand kleben, wenn sie sticky sind */
  padding-top: 8px;
  padding-bottom: 8px;
  /* Optional: Ein leichter Schatten, wenn es "klebt", um es abzuheben */
  /* box-shadow: 0 2px 5px rgba(0,0,0,0.05); */
  /* Die Controls selbst (in ChartControls.tsx) sollten jetzt die Margins für den normalen Fluss haben */
  /* margin-bottom: 20px; */ /* Wird evtl. in ChartControls.tsx gehandhabt oder hier bei Bedarf */
}

/* Optional: Anpassung für die Controls *innerhalb* des neuen Sticky Wrappers, falls sie dünner sein sollen */
/* Diese Stile könnten auch direkt in ChartControls.tsx oder dessen CSS-Datei, falls vorhanden, sein. */
/* Hier als Beispiel, falls ChartControls.tsx einen äußeren div mit Klasse 'chart-controls-container' hat: */
/*
.chart-controls-sticky-wrapper .chart-controls-container {
  margin-top: 0;
  margin-bottom: 0;
}
*/

/* Stile, um die Segment-Buttons und das Select dünner zu machen,
   wenn sie sich im sticky-wrapper befinden: */
.chart-controls-sticky-wrapper ion-segment-button {
  --padding-top: 4px;
  --padding-bottom: 4px;
  min-height: 28px;
}

.chart-controls-sticky-wrapper ion-segment-button ion-label {
  font-size: 0.85em;
  margin-top: 0;
  margin-bottom: 0;
}

.chart-controls-sticky-wrapper ion-select {
  --padding-top: 6px;
  --padding-bottom: 6px;
  font-size: 0.9em;
  min-height: 30px;
}


/* --- Ende src/pages/Home.css --- */